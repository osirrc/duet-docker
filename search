#!/usr/bin/env python3
import os
import argparse
import json
import subprocess
import shutil
print("Searching...")

parser = argparse.ArgumentParser()
parser.add_argument("--json", type=json.loads, required=True, help="the json input")
args, unknown = parser.parse_known_args()

mod = args.json["opts"]["model"]

try: 
    threshold='-t '+args.json["opts"]["threshold"]
except:
    threshold=''
try: 
    annotation_file='-a '+ args.json["opts"]["annotation"]
except:
    annotation_file=''
try: 
    nfields='-n '+args.json["opts"]["nfields"]
except:
    nfields=''
try: 
    lambdas='-l '+ args.json["opts"]["lambdas"]
except:
    lambdas=''
try: 
    query_file='-q '+ args.json["opts"]["query"]
except:
    query_file=''

print(mod,topic_path,threshold,nfields,annotation_file,lambdas)
os.chdir("//elr_files//EntityLinkingRetrieval-ELR-master")
subprocess.run("python -m nordlys.elr.retrieval_elr {}  {}  {}  {} {}  {}".format(mod,query_file,threshold,nfields,annotation_file,lambdas),shell=True)

files = os.listdir('my_runs')
for file in files:
	shutil.copy(os.path.join('my_runs', file), '/output')




